name: Auto Create Pull Request

on:
  create:

permissions:
  contents: read  # Only read access to repo contents
  pull-requests: write  # Only grant write access to PRs (not all contents)

jobs:
  create-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get list of issues
        id: get-issues
        run: |
          ISSUES_JSON=$(gh api "repos/${{ github.repository }}/issues" --jq '.')
          echo "issues=$(echo "$ISSUES_JSON" | jq -c .)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Find matching issue for PR
        id: find-issue
        run: |
          # Extract branch name
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          ISSUE_BRANCH_NAME="${BRANCH_NAME#development/}"

          # Clean the branch name (remove spaces and hyphens)
          CLEAN_BRANCH_NAME=$(echo "$ISSUE_BRANCH_NAME" | tr -d '[:space:]-')

          # Get list of issues
          ISSUES_JSON='${{ steps.get-issues.outputs.issues }}'

          MATCHED_ISSUE=""
          MATCHED_TITLE=""
          MATCHED_LABELS=""
          MATCHED_ASSIGNEES=""

          # Loop through issues
          while IFS= read -r ISSUE; do
            ISSUE_TITLE=$(echo "$ISSUE" | jq -r '.title')
            ISSUE_NUMBER=$(echo "$ISSUE" | jq -r '.number')
            ISSUE_LABELS=$(echo "$ISSUE" | jq -c '[.labels[].name] | join(",")')
            ISSUE_ASSIGNEES=$(echo "$ISSUE" | jq -c '[.assignees[].login] | join(",")')

            CLEAN_ISSUE_TITLE=$(echo "$ISSUE_TITLE" | tr -d '[:space:]-')

            if [[ "${CLEAN_BRANCH_NAME,,}" == "${CLEAN_ISSUE_TITLE,,}" ]]; then
              MATCHED_ISSUE="$ISSUE_NUMBER"
              MATCHED_TITLE="$ISSUE_TITLE"
              MATCHED_LABELS="$ISSUE_LABELS"
              MATCHED_ASSIGNEES="$ISSUE_ASSIGNEES"
              break
            fi
          done < <(echo "$ISSUES_JSON" | jq -c '.[]')

          {
            echo "matched_issue=$MATCHED_ISSUE"
            echo "matched_title=$MATCHED_TITLE"
            echo "matched_labels=$MATCHED_LABELS"
            echo "matched_assignees=$MATCHED_ASSIGNEES"
          } >> "$GITHUB_OUTPUT"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          branch: "${{ github.ref_name }}"
          title: "${{ steps.find-issue.outputs.matched_title }}"
          body: |
            This PR addresses issue #${{ steps.find-issue.outputs.matched_issue }}: ${{ steps.find-issue.outputs.matched_title }}.
            Closes #${{ steps.find-issue.outputs.matched_issue }}.
          labels: "${{ steps.find-issue.outputs.matched_labels }}"
          assignees: "${{ steps.find-issue.outputs.matched_assignees }}"
          draft: true